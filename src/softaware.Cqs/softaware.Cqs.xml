<?xml version="1.0"?>
<doc>
    <assembly>
        <name>softaware.Cqs</name>
    </assembly>
    <members>
        <member name="T:softaware.Cqs.ICommand">
            <summary>
            Marker interface for commands.
            </summary>
        </member>
        <member name="T:softaware.Cqs.ICommandHandler`1">
            <summary>
            The command handler which handles the specified command.
            </summary>
            <typeparam name="TCommand">The type of the command to handle.</typeparam>
        </member>
        <member name="M:softaware.Cqs.ICommandHandler`1.HandleAsync(`0)">
            <summary>
            Handles a command.
            </summary>
            <param name="command">The command to handle.</param>
        </member>
        <member name="M:softaware.Cqs.ICommandHandler`1.HandleAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Handles a command which cancellation support.
            </summary>
            <param name="command">The command to handle.</param>
            <param name="cancellationToken">The cancellation token when requesting the cancellation of the execution.</param>
        </member>
        <member name="T:softaware.Cqs.ICommandProcessor">
            <summary>
            Processes a specified command.
            </summary>
        </member>
        <member name="M:softaware.Cqs.ICommandProcessor.ExecuteAsync(softaware.Cqs.ICommand,System.Threading.CancellationToken)">
            <summary>
            Executes the specified command.
            </summary>
            <param name="command">The command to execute.</param>
            <param name="cancellationToken">The optional cancellation token for requesting cancellation of the command execution.</param>
        </member>
        <member name="T:softaware.Cqs.IQuery`1">
            <summary>
            Marker interface for queries.
            </summary>
            <typeparam name="TResult">The type of the query result.</typeparam>
        </member>
        <member name="T:softaware.Cqs.IQueryHandler`2">
            <summary>
            The query handler which handles the specified query.
            </summary>
            <typeparam name="TQuery">The type of the query to handle.</typeparam>
            <typeparam name="TResult">The type of the query result.</typeparam>
        </member>
        <member name="M:softaware.Cqs.IQueryHandler`2.HandleAsync(`0)">
            <summary>
            Handles a query.
            </summary>
            <param name="query">The query to handle.</param>
            <returns></returns>
        </member>
        <member name="M:softaware.Cqs.IQueryHandler`2.HandleAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Handles a query which cancellation support.
            </summary>
            <param name="query">The query to handle.</param>
            <param name="cancellationToken">The cancellation token when requesting the cancellation of the execution.</param>
            <returns>The query result.</returns>
        </member>
        <member name="T:softaware.Cqs.IQueryProcessor">
            <summary>
            Processes a specified query.
            </summary>
        </member>
        <member name="M:softaware.Cqs.IQueryProcessor.ExecuteAsync``1(softaware.Cqs.IQuery{``0},System.Threading.CancellationToken)">
            <summary>
            Executes the specified query.
            </summary>
            <param name="query">The query to execute.</param>
            <param name="cancellationToken">The optional cancellation token for requesting cancellation of the query execution.</param>
            <returns>The query result.</returns>
        </member>
        <member name="T:softaware.Cqs.PublicCommandHandlerDecorator`1">
            <summary>
            This decorator just delegates to the next decorator or to the actual handler.
            </summary>
            <remarks>
            This is needed since the introduction of the default interface implementation for the <see cref="M:softaware.Cqs.ICommandHandler`1.HandleAsync(`0,System.Threading.CancellationToken)"/> overload,
            so that this overload can corretly be resolved by the DI container. See https://jeremybytes.blogspot.com/2019/09/c-8-interfaces-dynamic-and-default.html for details.
            </remarks>
        </member>
        <member name="M:softaware.Cqs.PublicCommandHandlerDecorator`1.#ctor(softaware.Cqs.ICommandHandler{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:softaware.Cqs.PublicCommandHandlerDecorator`1"/> class.
            </summary>
            <param name="decoratee">The command handler to decorate.</param>
        </member>
        <member name="M:softaware.Cqs.PublicCommandHandlerDecorator`1.HandleAsync(`0)">
            <inheritdoc/>
        </member>
        <member name="M:softaware.Cqs.PublicCommandHandlerDecorator`1.HandleAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:softaware.Cqs.PublicQueryHandlerDecorator`2">
            <summary>
            This decorator just delegates to the next decorator or to the actual handler.
            </summary>
            <remarks>
            This is needed since the introduction of the default interface implementation for the <see cref="M:softaware.Cqs.IQueryHandler`2.HandleAsync(`0,System.Threading.CancellationToken)"/> overload,
            so that this overload can corretly be resolved by the DI container. See https://jeremybytes.blogspot.com/2019/09/c-8-interfaces-dynamic-and-default.html for details.
            </remarks>
        </member>
        <member name="M:softaware.Cqs.PublicQueryHandlerDecorator`2.#ctor(softaware.Cqs.IQueryHandler{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:softaware.Cqs.PublicQueryHandlerDecorator`2"/> class.
            </summary>
            <param name="decoratee">The command handler to decorate.</param>
        </member>
        <member name="M:softaware.Cqs.PublicQueryHandlerDecorator`2.HandleAsync(`0)">
            <inheritdoc/>
        </member>
        <member name="M:softaware.Cqs.PublicQueryHandlerDecorator`2.HandleAsync(`0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:softaware.Cqs.SoftawareCqsTypesBuilder">
            <summary>
            Provides a builder to configure registered assemblies.
            </summary>
        </member>
        <member name="P:softaware.Cqs.SoftawareCqsTypesBuilder.RegisteredAssemblies">
            <summary>
            Gets the already registered assemblies.
            </summary>
        </member>
        <member name="M:softaware.Cqs.SoftawareCqsTypesBuilder.IncludeTypesFrom(System.Type[])">
            <summary>
            Registers the assemblies of the provided <paramref name="markerTypes"/>.
            </summary>
        </member>
        <member name="M:softaware.Cqs.SoftawareCqsTypesBuilder.IncludeTypesFrom(System.Reflection.Assembly[])">
            <summary>
            Registers the provided <paramref name="assemblies"/> for later CQS configuration.
            </summary>
        </member>
    </members>
</doc>
